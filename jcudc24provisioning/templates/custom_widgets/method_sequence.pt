<!--
    This template has been modified from sequence.pt specifically for the methods page
    The intent is to provide template selection and AJAX autocomplete when adding methods.
-->

<div class="deformSeq"
     id="${field.oid}"
     tal:define="rndr field.renderer;
                 item_tmpl field.widget.item_template;
                 min_len field.widget.min_len or 0;
                 max_len field.widget.max_len or 100000;
                 now_len len(subfields);
                 prototype field.widget.prototype(field)" xmlns="http://www.w3.org/1999/html">

    <div id="${field.oid}-template_panel" class="wizard hidden">

        <h2>Create New Method</h2>

        <p>Working out how to fit your data into this system can be a bit complicated, we recommend you follow the below process:</p>
        <ol>
            <li>Split the output data into separate result types.</li>
            <li>Identify what collects the data for each result type (eg. there could be a sensor + obs form).</li>
            <li>Create 1 method for each result type.</li>
            <li>Create 1 dataset for each thing that collects data.</li>
        </ol>

        <h4>(Optional) Pre-Configured Template</h4>
        <p>Templates allow for pre-configured data collection methods where as much information is pre-filled as possible.  Feel free to have a browse for something appropriate, if you use a template that is incorrect you can easily delete the method and re-create it.</p>
        <p><i>Please let us know through the contact forms if your project or department doesn't have templates and you think they would be beneficial (eg. you keep having to fill the same thing out).</i></p>

        <input type="checkbox" id="use_template" onclick="$('#${field.oid}-template_selection').toggle()"/>
        <label for="use_template">Use a method template</label>
        <div id="${field.oid}-template_selection" style="display: none;">
            <ol>
                <li>First select the category or organisational group on the left hand side.</li>
                <li>Then select the most relevant template from the list on the right hand side.</li>
            </ol>
            <div tal:content="structure rndr(field.schema.templates_data.widget.template, field=field.schema.templates_data, cstruct='', parent=field)"></div>
        </div>
        <br />
        <div style="clear: both; position: relative; height: 60px;">
            <div class="button_text submit" onclick="stopAddMethod(this);">Cancel</div>
            <div class="button_text submit" onclick="preFillMethod(this);">Create Method</div>

        </div>
    </div>
    <!-- sequence -->

    <input type="hidden" name="__start__" value="${field.name}:sequence"
           class="deformProto"
           tal:attributes="prototype prototype"/>

    <ul id="seq_items-${field.oid}">

        <div tal:repeat="tup subfields"
             tal:replace="structure rndr(item_tmpl, field=tup[1], cstruct=tup[0],
                      parent=field)"/>

    <span class="deformInsertBefore"
          tal:attributes="min_len min_len; 
                          max_len max_len; 
                          now_len now_len"></span>

    </ul>

    <a
       class="deformSeqAdd"
       id="${field.oid}-seqAdd"
       onclick="deform.appendSequenceItem(this); addNewMethod(this);">
        <small id="${field.oid}-addtext">${add_subitem_text}</small>
    </a>

    <script type="text/javascript">


        deform.addCallback(
                '${field.oid}',
                function (oid) {
                    var oid_node = $('#' + oid);

                    deform.processSequenceButtons(oid_node, ${min_len},
                            ${max_len}, ${now_len});


                    var template_panel = $("#" + oid + "-template_panel");
                    $("#deform").parent().prepend(template_panel[0]);

                    if ($("#" + oid).find(".deformInsertBefore").prev().length == 0) {
                        deform.appendSequenceItem($("#" + oid).children()[0]);
                        addNewMethod($("#" + oid).children()[0]);
                    }
                }
        );

//        addNewMethod($("#${field.oid}").children()[0]);
        function addNewMethod(add_button) {
            var oid = add_button.parentNode.id;
            var template_panel = $("#" + oid + "-template_panel");

//            template_panel.find('ol').after($("#" + oid + "-template_prototype")[0].value);
//            processJavascript(template_panel[0]);
//            deform.processCallbacks();

            $("#deform").hide();
            template_panel.show();
//            $('html, body').animate({
//                scrollTop: template_panel.offset().top - 10
//            }, 0);
        }

        function stopAddMethod(stop_button) {
            var oid = stop_button.parentNode.parentNode.id.replace('-template_panel', '');
            var template_panel = $("#" + oid + '-template_panel');
            var new_oid = $("#" + oid).children("ul").first().children(".deformInsertBefore").prev()[0].id;

//            template_panel.find('ol').after($("#" + oid + "-template_prototype")[0].value);
//            processJavascript(template_panel[0]);
            $("#" + new_oid).remove();
            $("#deform").show();
            template_panel.hide();
        }

        function preFillMethod(create_button) {
            var oid = create_button.parentNode.parentNode.id.replace('-template_panel', '');
            var new_oid = $("#" + oid).children("ul").first().children(".deformInsertBefore").prev()[0].id;

//            alert($('#' + oid + '-template_panel').find('#use_template').prop('checked'));
            var use_template = $('#' + oid + '-template_panel').find('#use_template').prop('checked');
            if (use_template == true) {
                var method_id = $(create_button.parentNode.parentNode).find(".selected input")[0].value;
                $("#" + new_oid + " [name='method:method_template_id']")[0].value = method_id;
                var project_id = $("[name='project:id']")[0].value;
                $("#" + new_oid + " [name='method:project_id']")[0].value = project_id;
            } else {
                $("#" + new_oid + " [name='method:project_id']")[0].value = project_id;
            }
            $("#deformSave").click();
        }

    </script>

    <input type="hidden" name="__end__" value="${field.name}:sequence"/>

    <!-- /sequence -->

</div>
