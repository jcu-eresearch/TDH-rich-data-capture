<!--
    This template has been modified by removing the href from the add link, this stops the page from jumping to the
    top whenever an item is added.
-->
<!--If remove stops working update deform.js
    line 129    var $before_node = $oid_node.children('ul').first().children('.deformInsertBefore').first();
-->

<div class="deformSeq"
     id="${field.oid}"
     tal:define="rndr field.renderer;
                 item_tmpl field.widget.item_template;
                 min_len field.widget.min_len or 0;
                 max_len field.widget.max_len or 100000;
                 now_len len(subfields);
                 prototype field.widget.prototype(field)">

    <!-- sequence -->

    <input type="hidden" name="__start__" value="${field.name}:sequence"
           class="deformProto"
           tal:attributes="prototype prototype"/>

    <ul id="seq_items-${field.oid}">

        <div tal:repeat="tup subfields"
             tal:replace="structure rndr(item_tmpl, field=tup[1], cstruct=tup[0],
                      parent=field)"/>

    <span class="deformInsertBefore"
          tal:attributes="min_len min_len; 
                          max_len max_len; 
                          now_len now_len"></span>

    </ul>


    <input type="hidden" id="${field.oid}-userSelectionId"/>
    <input type="text" size="10" id="${field.oid}-userSelection"/>
    <a
       class="deformSeqAdd"
       id="${field.oid}-seqAdd"
       onclick="deform.appendSequenceItem(this); add_user(this);">
        <small id="${field.oid}-addtext">${add_subitem_text}</small>
    </a>

    <script type="text/javascript">
        deform.addCallback(
                '${field.oid}',
                function (oid) {
                    oid_node = $('#' + oid);
                    deform.processSequenceButtons(oid_node, ${min_len},
                            ${max_len}, ${now_len});
                }
        )
    </script>


    <script type="text/javascript">
        function autocomplete_selected(event, ui) {
            $("#"+ event.target.id + "Id")[0].value = ui.item.identifier;
            $("#"+ event.target.id)[0].value = ui.item.label;
        }

        function add_user(add_button) {
            var oid = add_button.id.replace("-seqAdd", "");
            var user_id = $("#" + oid + "-userSelectionId")[0].value;
            var user_name = $("#" + oid + "-userSelection")[0].value;
            $(add_button.parentNode).children("ul").first().children(".deformInsertBefore").prev().find("[name='user_id']")[0].value=user_id;
            $(add_button.parentNode).children("ul").first().children(".deformInsertBefore").prev().find("legend")[0].innerHTML=user_name;
        }

        deform.addCallback(
                '${field.oid}',
                function (oid) {

                    var test = [
                        "asdf",
                        "admin",
                        "user"
                    ];
                    $('#' + oid + "-userSelection").autocomplete({source: ${field.schema.users}, select: autocomplete_selected, min_length: 1});
                }
        );

    </script>

    <input type="hidden" name="__end__" value="${field.name}:sequence"/>

    <!-- /sequence -->

</div>
