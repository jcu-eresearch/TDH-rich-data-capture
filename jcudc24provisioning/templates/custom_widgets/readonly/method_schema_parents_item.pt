<li style="margin:0px; padding:0px;margin-left: 5px;"
    id="item-${field.oid}"
    tal:omit-tag="field.widget.hidden"
    i18n:domain="deform"
    tal:define="name field.name.split(':')[-1]"
    tal:attributes="title field.schema.default or nothing;
                    class name != 'name' and 'hidden' or nothing">

    <!-- mapping_item -->
    <span tal:condition="name != 'name'" tal:content="structure field.serialize(cstruct, readonly=True)" />

    <!--Manually create the method_schema name as the template needs to be hidden so it doesn't display on the method page-->
    <span tal:condition="name == 'name'">
        <input type="text" readonly='readonly' name='methodschema:name' value="${cstruct}">
    </span>
    <a tal:condition="name == 'name'" class="buttonText parent_schema_preview_button"
            onclick="$(parentNode.parentNode.parentNode).find('.parent_schema_preview_panel').toggle(200); $(this).toggleClass('current')">View Fields</a>


    <p tal:condition="field.error and not field.widget.hidden and not field.typ.__class__.__name__=='Mapping'"
       tal:define="errstr 'error-%s' % field.oid"
       tal:repeat="msg field.error.messages()"
       tal:attributes="id repeat.msg.index==0 and errstr or
   ('%s-%s' % (errstr, repeat.msg.index))"
       class="${field.widget.error_class}"
       i18n:translate="">${msg}</p>

    <script type="text/javascript">
        deform.addCallback(
                '${field.oid}',
                function (oid) {
                    var list_item = $("#item-" + oid);
                    if (list_item.children(".structural_title_content").length > 0) {
                        var structural_element = list_item.children(".structural_title_content")[0];
                        var title_text = structural_element.innerHTML;
                        list_item[0].title = title_text;
                    }
                });
    </script>

    <!-- /mapping_item -->
</li>


