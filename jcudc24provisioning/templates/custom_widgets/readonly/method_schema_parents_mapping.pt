<fieldset id="mapping-${field.oid}" i18n:domain="deform"
          tal:attributes="class 'deformMappingFieldset ' + str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and ('collapsible-'+str(field.schema.__dict__.get('collapse_group')) or nothing))">
    <!-- mapping -->  <!--<legend 1tal:condition="field.schema.__dict__.get('collapsed')"><span class="collapse_icon">+ </span>${field.title}</legend>-->
    <ul tal:attributes="style ('display: ' + str(field.schema.__dict__.get('collapsed') == True and 'none'));
                      class str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and 'collapsible_items' or nothing)">
        <li class="errorLi" tal:condition="field.errormsg">
            <h3 class="errorMsgLbl" i18n:translate="">There was a problem with this section</h3>

            <p class="errorMsg">${field.errormsg}</p>
        </li>
        <li class="section description" tal:condition="field.description">
            <div id="desc-${field.oid}" tal:content="structure field.description"></div>
        </li>
        <input type="hidden" name="__start__" value="${field.name}:mapping"/>

        <div
                tal:define="rndr field.renderer;
                   tmpl field.widget.readonly_item_template"
                tal:repeat="f field.children"
                tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))"/>
        <input type="hidden" name="__end__" value="${field.name}:mapping"/>
    </ul>

    <!-- /mapping -->
    <div class="parent_schema_preview_panel hidden" tal:define="schema_form field.schema.get_form(cstruct['methodschema:id'])">
        <div class="preview_content" tal:content="structure schema_form"></div>

        <a class='close_button buttonText' onclick="$(parentNode.parentNode).find('.parent_schema_preview_button').removeClass('current'); $(parentNode).toggle(200);" >Close</a>
    </div>

</fieldset>



