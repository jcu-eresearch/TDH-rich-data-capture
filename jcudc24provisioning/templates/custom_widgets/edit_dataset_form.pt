<form
  id="${field.formid}"
  action="${field.action}"
  method="${field.method}"
  enctype="multipart/form-data"
  accept-charset="utf-8"
  i18n:domain="deform"
  tal:attributes="class field.css_class">


  <fieldset class="deformFormFieldset">

    <legend tal:condition="field.title">${field.title}</legend>

    <input type="hidden" name="_charset_" />
    <input type="hidden" name="__formid__" value="${field.formid}"/>
    <ul tal:condition="'None' in str(cstruct['dataset:id']) or 'colander.null' in str(cstruct['dataset:id'])">
        <div id="${field.oid}-template_panel" class="wizard" style="border: none !important">
            <h2>Add A New Dataset</h2>
            <p>Select the method that this dataset is for, this will pre-fill the dataset with the correct data schema (how the data is stored), data source as well as any data setup within the method template.</p>
            <p>If you the existing methods can't be used you will need to contact the administrators.</p>

            <div class="dataset_select">
                <div tal:repeat="method field.schema.methods" onclick="$(this).siblings().not($(this)).removeClass('selected'); $(this).toggleClass('selected');">
                    <input class="method_id" type="hidden" value="${method.id}" />
                    <h3 tal:condition="method.method_name">${method.method_name}</h3>
                    <h3 tal:condition="not method.method_name"><i>Un-named method</i></h3>
                    <p tal:condition="method.method_description" tal:content="structure method.method_description"></p>
                    <p tal:condition="not method.method_description"><i>No description has been provided for this method.</i></p>
                </div>
            </div>
            <p class="required_message error hidden"><b>Required:</b> Please select a method by clicking on one of the items above.</p>


            <div style="clear: both; position: relative; height: 60px;">
                <button id="${field.oid}-button"  class="button_text submit" onclick="return create_dataset(this);">Create Dataset</button>
            </div>
        </div>
    </ul>
    <ul tal:attributes="style ('None' in str(cstruct['dataset:id']) or 'colander.null' in str(cstruct['dataset:id'])) and 'display: none' or nothing">
      <li class="errorLi" tal:condition="field.error">
        <h3 class="errorMsgLbl" i18n:translate=""
            >There was a problem with your submission</h3>
        <p class="errorMsg" i18n:translate="" i18n:domain="deform"
           >Errors have been highlighted below</p>
        <p class="errorMsg">${field.errormsg}</p>
      </li>

      <li tal:condition="field.description">
        <div class="section first description" tal:content="structure field.description"></div>
      </li>
        <tal:block
                tal:define="rndr field.renderer;
                   tmpl field.widget.item_template"
                tal:repeat="f field.children">
            <div tal:condition="not 'data_source' in f.name" tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))" />
            <tal:block repeat="method field.schema.methods" tal:condition="'data_source' in f.name">
                <!--If this is the correct data source-->
                <tal:block tal:condition="str(method.id)==str(cstruct.get(field.schema.children[7].name,null))">

                    <!--If the method doesn't have any datasource setup-->
                    <tal:block tal:condition="not hasattr(method, 'no_data_source') and method.data_source is None or str(method.data_source) == ''">
                        <div tal:define="dummy setattr(method, 'no_data_source', True)">
                            <legend>Data Source Configuration</legend>
                            <p class="error">There is no data source configured for this datasets' method, please go to the <i>Method</i> step and select a data source.</p>
                        </div>
                    </tal:block>

                    <tal:block tal:condition="str(method.data_source) in f.name" >

                        <!--If this is a pull_data_source-->
                        <tal:block tal:condition="'pull_data_source' in f.name or 'sos_scraper_data_source' in f.name">
                            <tal:block tal:define="test setattr(f.schema.children[3].widget, 'values',field.widget.get_file_fields(method.data_type)) "></tal:block>
                        </tal:block>

                        <div tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))" />
                    </tal:block>
                </tal:block>
            </tal:block>
        </tal:block>

      <li class="buttons">
        <tal:block repeat="button field.buttons">
          <button
              tal:attributes="disabled button.disabled"
              id="${field.formid+button.name}"
              name="${button.name}"
              type="${button.type}"
              class="btnText submit"
              value="${button.value}">
            <span>${button.title}</span>
          </button>
        </tal:block>
      </li>

    </ul>

  </fieldset>

<script type="text/javascript">
    function create_dataset(create_button) {
        var oid = create_button.id.replace("-button", '');
        var create_panel = $(create_button.parentNode.parentNode);
        var selected_item = create_panel.find(".dataset_select .selected");

        if (selected_item.length == 0) {
            create_panel.find(".required_message").show(200);
            return false;
        } else {
            var method_id = selected_item.find(".method_id")[0].value;
            $("[name='dataset:method_id']")[0].value = method_id;
            $("#deform")[0].submit();
        }
        return true;
    }
</script>

<script type="text/javascript" tal:condition="field.use_ajax">
  deform.addCallback(
     '${field.formid}',
     function(oid) {
       var options = {
         target: '#' + oid,
         replaceTarget: true,
         success: function() {
           deform.processCallbacks();
           deform.focusFirstInput();
         }
       };
       var extra_options = ${field.ajax_options} || {};
       $('#' + oid).ajaxForm($.extend(options, extra_options));
     }
  );
</script>

</form>
