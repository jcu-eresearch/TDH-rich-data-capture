<fieldset id="dataset_mapping-${field.oid}" i18n:domain="deform"
          tal:attributes="class 'deformMappingFieldset dataset_mapping ' + str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and ('collapsible-'+str(field.schema.__dict__.get('collapse_group')) or nothing))">
    <!-- mapping -->  <!--<legend 1tal:condition="field.schema.__dict__.get('collapsed')"><span class="collapse_icon">+ </span>${field.title}</legend>-->
    <legend class="collapsible"
            tal:condition="(field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and field.title"
            tal:define="symbol (field.schema.__dict__.get('collapsed') == True and '+') or '-'">
            <span class="help_icon" onclick="toggleHelp(this);" tal:condition="field.schema.__dict__.get('help')">?</span>
            <span onclick="toggleCollapse(this.parentNode, '${field.schema.__dict__.get('collapse_group')}');" class="collapse_icon">${symbol}</span> ${field.title} for ${field.schema.method_names.get(str(cstruct.get("dataset:method_id")))} <a tal:condition="cstruct.get('dataset:dam_id', None) is not None" href="${field.schema.request.route_url('dataset', project_id=cstruct.get('dataset:project_id', None), dataset_id=cstruct.get('dataset:id', None))}">[Edit Ingester]</a> <a tal:condition="cstruct.get('dataset:dam_id', None) is not None" href="${field.schema.request.route_url('search', search_info='/data/id_list=dataset_%s' % cstruct.get('dataset:id', None))}">[Manage Data]</a>
        <!--#[<a class="expand_all" onclick="expandAll('${field.schema.__dict__.get('collapse_group')}');">Expand All</a>/<a onclick="collapseAll('${field.schema.__dict__.get('collapse_group')}');" class="collapse_all">Collapse All</a>]-->
    </legend>
    <legend tal:condition="not (field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and field.title">
        <span style="cursor: pointer; background-color: #ddd;" onclick="$(this.parentNode.parentNode).find('.help_text').first().toggle(200)" tal:condition="field.schema.__dict__.get('help')">?</span>
        ${field.title}
    </legend>
    <ul tal:attributes="style ('display: ' + str(field.schema.__dict__.get('collapsed') == True and 'none'));
                      class str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and 'collapsible_items' or nothing)">
        <li class="errorLi" tal:condition="field.errormsg">
            <h3 class="errorMsgLbl" i18n:translate="">There was a problem with this section</h3>

            <p class="errorMsg">${field.errormsg}</p>
        </li>
        <li class="help_text hidden section" tal:condition="field.schema.__dict__.get('help')">
             <div id="help-${field.oid}" tal:content="structure field.schema.__dict__.get('help')"></div>
        </li>
        <li class="section description" tal:condition="field.description">
            <div id="desc-${field.oid}" tal:content="structure field.description"></div>
        </li>
        <input type="hidden" name="__start__" value="${field.name}:mapping"/>

        <tal:block
                tal:define="rndr field.renderer;
                   tmpl field.widget.item_template"
                tal:repeat="f field.children">
            <div tal:condition="not 'data_source' in f.name" tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))" />
            <tal:block repeat="method field.schema.methods" tal:condition="'data_source' in f.name">
                <!--If this is the correct data source-->
                <tal:block tal:condition="str(method.id)==str(cstruct.get(field.schema.children[7].name,null))">
                    <!--If the method doesn't have any datasource setup-->
                    <tal:block tal:condition="not hasattr(method, 'no_data_source') and method.data_source is None or str(method.data_source) == ''">
                         <div tal:define="dummy setattr(method, 'no_data_source', True)">
                             <legend>Data Source Configuration</legend>
                             <p class="error">There is no data source configured for this datasets' method, please go to the <i>Method</i> step and select a data source.</p>
                         </div>
                    </tal:block>
                    <tal:block tal:condition="str(method.data_source) in f.name" >

                        <!--If this is a pull_data_source-->
                        <tal:block tal:condition="'pull_data_source' in f.name or 'sos_scraper_data_source' in f.name">
                            <tal:block tal:define="file_fields field.schema.widget.get_file_fields(method.data_type)">
                                <tal:block tal:condition="len(file_fields) > 0" tal:define="test setattr(f.schema.children[3].widget, 'values',file_fields)"></tal:block>
                            </tal:block>
                        </tal:block>
                        <div tal:replace="structure rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))" />
                    </tal:block>
                </tal:block>
            </tal:block>
        </tal:block>
        <input type="hidden" name="__end__" value="${field.name}:mapping"/>
    </ul>
    <!-- /mapping -->

    <script type="text/javascript" tal:condition="(field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False)">
        deform.addCallback(
                '${field.oid}',
                function (oid) {
//                    var collapse_span = $("#mapping-" + oid).find(".collapse_icon");
//                    if (collapse_span.length <= 0) {
//                        return;
//                    }
//
//                    var collapsed = collapse_span.html().match(/\-/) == null;
//                    var group = $("#mapping-" + oid)[0].className.split(" ")[1].split("-")[1];
//                    if (collapsed == false && group != "None") {
//                        var group_items = $(".collapsible-" + group + "[id!=mapping-" + oid + "]");
//                        group_items.find(".collapsible_items").slideUp(200);
//                        group_items.find(".collapse_icon").html('+');
//                    }
                });
    </script>
</fieldset>



