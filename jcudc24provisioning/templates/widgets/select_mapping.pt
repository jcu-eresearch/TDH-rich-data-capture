<div tal:condition="len(field.children) <= 1" class="workflow_error">
    No methods have been configured.  You need to create a method in the previous step first!
</div>

<fieldset tal:condition="len(field.children) > 1" id="mapping-${field.oid}" i18n:domain="deform"
        tal:attributes="class 'selectMappingFieldset ' + str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and ('collapsible-'+str(field.schema.__dict__.get('collapse_group'))))">
    <!-- select mapping -->
    <legend class="collapsible"
            tal:condition="(field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and field.title"
            tal:define="symbol (field.schema.__dict__.get('collapsed') == True and '+') or '-'"><span
            onclick="toggleCollapse(this, '${field.schema.__dict__.get('collapse_group')}');"
            class="collapse_icon">${symbol}</span> ${field.title} [<a class="expand_all" onclick="expandAll('${field.schema.__dict__.get('collapse_group')}');">Expand All</a>/<a onclick="collapseAll('${field.schema.__dict__.get('collapse_group')}');" class="collapse_all">Collapse All</a>]
    </legend>
    <ul tal:attributes="style ('display: ' + str(field.schema.__dict__.get('collapsed') == True and 'none'));
                      class str((field.schema.__dict__.get('collapsed') or field.schema.__dict__.get('collapsed') == False) and 'collapsible_items' or nothing)">
        <li class="errorLi" tal:condition="field.errormsg">
            <h3 class="errorMsgLbl" i18n:translate="">There was a problem with this section</h3>

            <p class="errorMsg">${field.errormsg}</p>
        </li>

        <li class="section description" tal:condition="field.description">
            <div tal:content="structure field.description"></div>
        </li>
        ${field.__dict__.get('select_title')}
        <label class="desc" for="${field.oid}">${'select_title' in field.__dict__ and field.__dict__[select_title] or field.title}<span tal:condition="field.required" class="req"
                                                                   id="req-${field.oid}">*</span>
        </label>
        <span id="select_mapping_options-${field.oid}" style="display: none;"><span tal:repeat="f field.children"
                                                                                    tal:replace="f.oid"/></span>

        <input type="hidden" name="__start__" value="${field.name}:mapping"/>

        <select name="schema_select" title="${field.description}"
                onchange="setSelectedItem(this)"
                id="${field.oid}"
                tal:attributes="size field.widget.size"
                tal:attributes="class field.widget.css_class">
            <option tal:attributes="class field.widget.css_class" value="none">---Select One---</option>
            <tal:block tal:repeat="f field.children[1:]">
                <option tal:define="method_id cstruct.get(f.name,null) and cstruct.get(f.name,null)['dataset:method_id']"
                        tal:attributes="selected (str(method_id) == str(cstruct.get('schema_select'))) and 'selected';
                             class field.widget.css_class"
                        value="${f.oid}">${f.title}
                </option>
            </tal:block>
        </select>

        <div id="select_mapping_content-${field.oid}">
            <div tal:define="rndr field.renderer; tmpl field.widget.item_template"
                 tal:repeat="f field.children">
                <div tal:define="method_id isinstance(cstruct.get(f.name,null), dict) and cstruct.get(f.name,null) and cstruct.get(f.name,null)['dataset:method_id'] or None"
                     tal:replace="structure (method_id is not None and (str(method_id) == str(cstruct.get('schema_select'))) and rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))) or nothing" />
            </div>
        </div>

        <input type="hidden" name="__end__" value="${field.name}:mapping"/>

        <div id="select_mapping_prototypes-${field.oid}">
            <input type="hidden"
                   tal:define="rndr field.renderer; tmpl field.widget.item_template"
                   tal:repeat="f field.children"
                   tal:attributes="id 'select_item-' + f.oid;
                                  class 'select_mapping_prototype'"
                   value="${rndr(tmpl,field=f,cstruct=cstruct.get(f.name,null))}"/>
        </div>
    </ul>
    <!-- /mapping -->

    <script type="text/javascript">
        deform.addCallback(
                '${field.oid}',
                function (oid) {


                    var collapse_span = $("#mapping-" + oid).find(".collapse_icon");
                    if (collapse_span.length <= 0) {
                        return;
                    }

                    var collapsed = collapse_span.html().match(/\-/) == null;
                    var group = $("#mapping-" + oid)[0].className.split(" ")[1].split("-")[1];
                    if (collapsed == false && group != "None") {
                        var group_items = $(".collapsible-"+group+ "[id!=mapping-" + oid+"]");
                        group_items.find(".collapsible_items").slideUp(200);
                        group_items.find(".collapse_icon").html('+');
                    }
                });
    </script>
</fieldset>




