<span tal:omit-tag="">
    <tal:block define="placeholder field.schema.__dict__.get('placeholder') or nothing;
                           default_text cstruct or field.schema.default or placeholder">
        <div class="ui-widget">
        <input type="text"
               name="${field.name}"
               value="${default_text}"
               tal:attributes="size field.widget.size;"
               id="${field.oid}"/>
        </div>

        <style>
            .ui-autocomplete {
                max-height: 300px;
                overflow-y: auto;
                /* prevent horizontal scrollbar */
                overflow-x: hidden;
            }
                /* IE 6 doesn't support max-height
                * we use height instead, but this forces the menu to always be this tall
                */
            * html .ui-autocomplete {
                height: 300px;
            }
            .ui-autocomplete-loading {
                background: white url('http://jqueryui.com/images/ui-anim_basic_16x16.gif') right center no-repeat;
            }
            #${field.oid} { width: 25em;}
        </style>

    <script tal:condition="field.widget.values" type="text/javascript">
            deform.addCallback(
                    '${field.oid}',
                    function (oid) {
                        $('#' + oid).autocomplete({source: get_activities});
                        $('#' + oid).autocomplete("option", ${options});
                    }
            );

            function get_activities(request, response) {
                $.ajax({
                    url: '${field.widget.values}'+request.term,
                    dataType: "json",
                    success: function( data ) {
                        response($.map( data, function( item ) {
                            return {
                                label: item.label,
                                value: item.value
                            }
                        }));
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                        alert(textStatus + " : " + errorThrown)
                    },
                    open: function() {
                        $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
                    },
                    close: function() {
                        $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
                    }
                });
            }
        </script>

    </tal:block>
</span>
